<Page
    x:Class="ParkenDD.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:ParkenDD.Models"
    xmlns:apiModels="using:ParkenDD.Api.Models"
    xmlns:windowsStateTriggers="using:WindowsStateTriggers"
    xmlns:triggers="using:ParkenDD.Triggers"
    xmlns:controls="using:ParkenDD.Controls"
    xmlns:maps="using:Windows.UI.Xaml.Controls.Maps"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:ParkenDD.Behaviors"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    Background="#FFFFFF"
    DataContext="{Binding Main, Source={StaticResource Locator}}">

    <!-- #region Behaviors -->
    <interactivity:Interaction.Behaviors>
        <behaviors:WindowSizeBehavior 
            PreferredMinSize="300,450"
            />
        <behaviors:TitleBarBehavior
            ButtonBackgroundColor="Transparent"
            ButtonForegroundColor="{StaticResource BlueColor}"
            ButtonInactiveBackgroundColor="Transparent"
            ButtonInactiveForegroundColor="{StaticResource LightBlueColor}"
            ButtonHoverBackgroundColor="{StaticResource BlueColor}"
            ButtonHoverForegroundColor="#FFFFFF"
            ButtonPressedBackgroundColor="{StaticResource DarkBlueColor}"
            ButtonPressedForegroundColor="#FFFFFF"    
            />
        <behaviors:StatusBarBehavior
            ForegroundColor="#666666"
            BackgroundColor="#FFFFFF"
            />
    </interactivity:Interaction.Behaviors>
    <!-- #endregion -->

    <!-- #region Page resources -->
    <Page.Resources>
        <CollectionViewSource
            x:Key="SelectedCityData"
            ItemsPath="ParkingLots"
            />
    </Page.Resources>
    <!-- #endregion -->

    <Grid>
        <!-- #region VisualStateGroups -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="hideHamburger">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1000" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplitView.DisplayMode" Value="Inline" />
                        <Setter Target="SplitView.IsPaneOpen" Value="True" />
                        <Setter Target="ParkingLotListMenuBtn.Visibility" Value="Collapsed" />
                        <Setter Target="SplitViewMenuBtn.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="mobile">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ParkingLotMap.(RelativePanel.AlignTopWithPanel)" Value="False"/>
                        <Setter Target="ParkingLotMap.(RelativePanel.AlignBottomWithPanel)" Value="False"/>
                        <Setter Target="ParkingLotMap.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                        <Setter Target="ParkingLotListPanel.(RelativePanel.AlignRightWithPanel)" Value="True"/>
                        <Setter Target="ParkingLotListPanel.(RelativePanel.AlignTopWithPanel)" Value="False"/>
                        <Setter Target="ParkingLotMap.(FrameworkElement.Height)" Value="150"/>
                        <Setter Target="ParkingLotListPanel.(FrameworkElement.Width)" Value="Auto"/>
                        <Setter Target="ParkingLotListTopBar.(FrameworkElement.Width)" Value="Auto"/>
                        <Setter Target="ParkingLotListTopBar.(RelativePanel.AlignRightWithPanel)" Value="True"/>
                        <Setter Target="ParkingLotMap.(RelativePanel.Below)" Value="ParkingLotListTopBar"/>
                        <Setter Target="ParkingLotListPanel.(RelativePanel.Below)" Value="ParkingLotMap" />
                        <Setter Target="ParkingLotMap.(RelativePanel.RightOf)" Value="" />
                        <Setter Target="MapTopBar.Visibility" Value="Collapsed" />
                        <Setter Target="ParkingLotMap.(RelativePanel.BorderThickness)" Value="0,0,0,1"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="desktop">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="searchFocussed">
                    <VisualState.StateTriggers>
                        <triggers:ItemFocusStateTrigger Value="{Binding ElementName=SearchBox}"  />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ParkingLotListRefreshBtn.Visibility" Value="Collapsed" />
                        <Setter Target="ParkingLotListFilterBtn.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="loadingCity">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:EqualsStateTrigger Value="{Binding LoadingCity}" EqualTo="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ParkingLotListProgressBar.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="notLoadingCity">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:EqualsStateTrigger Value="{Binding LoadingCity}" EqualTo="False" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ParkingLotListProgressBar.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState x:Name="loadingCities">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:EqualsStateTrigger Value="{Binding LoadingMetaData}" EqualTo="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SelectCityProgressBar.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="notLoadingCities">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:EqualsStateTrigger Value="{Binding LoadingMetaData}" EqualTo="False" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SelectCityProgressBar.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState x:Name="mobilePlatform">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplitViewTopBar.Height" Value="48" />
                        <Setter Target="SplitViewTopBar.Padding" Value="0" />
                        <Setter Target="ParkingLotListTopBar.Height" Value="48" />
                        <Setter Target="ParkingLotListTopBar.Padding" Value="0" />
                        <Setter Target="MapTopBar.(UIElement.Visibility)" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <!-- #endregion -->
        <!-- #region SplitView -->
        <SplitView
            OpenPaneLength="200"
            x:Name="SplitView"
            CompactPaneLength="48"
            DisplayMode="Overlay"
            >
            <!-- #region Pane -->
            <SplitView.Pane>
                <Grid 
                    Style="{ThemeResource SplitViewContainerStyle}"
                    BorderThickness="0,0,1,0"
                    BorderBrush="{StaticResource DarkBlueBrush}"
                    >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <RelativePanel
                        x:Name="SplitViewTopBar"
                        Style="{ThemeResource SplitViewTopBarStyle}"
                        Grid.Row="0"
                        >
                        <Button
                            x:Uid="SplitViewMenuBtn"
                            x:Name="SplitViewMenuBtn"
                            Click="ToggleSplitView"
                            Tag=""
                            Style="{StaticResource SplitViewNavIconButtonStyle}" />
                        <TextBlock
                            RelativePanel.RightOf="SplitViewMenuBtn"
                            RelativePanel.AlignTopWithPanel="True"
                            RelativePanel.AlignBottomWithPanel="True"
                            Text="ParkenDD"
                            Style="{ThemeResource SplitViewLogoStyle}"
                            />
                    </RelativePanel>
                    <ProgressBar
                        x:Name="SelectCityProgressBar"
                        Grid.Row="1"
                        Style="{ThemeResource SelectCityProgressBarStyle}"
                        />
                    <ListView
                        Grid.Row="1"
                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                        ItemsSource="{x:Bind Vm.MetaData.Cities, Mode=OneWay}"
                        SelectedItem="{Binding SelectedCity, Mode=TwoWay}"
                        ItemContainerStyle="{StaticResource SelectCityListContainerStyle}"
                        SelectionChanged="SplitViewItemSelectionChanged"
                        >
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="apiModels:MetaDataCityRow">
                                <TextBlock
                                    Text="{x:Bind Name, Mode=OneWay}"
                                    Style="{ThemeResource SplitViewCityItemTextStyle}"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Button
                        Grid.Row="2"
                        Command="{Binding ShowInfoDialogCommand}"
                        Click="ShowInfoDialogButtonClick"
                        Style="{StaticResource AboutButtonStyle}">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock FontFamily="Segoe MDL2 Assets" Margin="0,2,4,0" FontSize="12">&#xE946;</TextBlock>
                                <TextBlock x:Uid="InfoTextLabel">Informationen</TextBlock>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                </Grid>
            </SplitView.Pane>
            <!-- #endregion -->
            <!-- #region Content -->
            <SplitView.Content>
                <RelativePanel
                    x:Name="RelativePanelContainer">
                    <!-- #region Toolbar -->
                    <RelativePanel
                        x:Name="ParkingLotListTopBar"
                        RelativePanel.AlignTopWithPanel="True"
                        RelativePanel.AlignLeftWithPanel="True"
                        Style="{ThemeResource ParkingLotListTopBarStyle}">
                        <Button
                            x:Uid="ParkingLotListMenuBtn"
                            x:Name="ParkingLotListMenuBtn"
                            RelativePanel.AlignLeftWithPanel="True"
                            Click="ToggleSplitView"
                            Tag=""
                            Style="{StaticResource NavIconButtonStyle}" />
                        <AutoSuggestBox
                            x:Name="SearchBox"
                            x:Uid="SearchBox"
                            RelativePanel.LeftOf="ParkingLotListFilterBtn"
                            RelativePanel.RightOf="ParkingLotListMenuBtn"
                            RelativePanel.AlignTopWithPanel="True"
                            RelativePanel.AlignBottomWithPanel="True"
                            PlaceholderText="~Adresse suchen..."
                            ItemsSource="{Binding SearchSuggestions}"
                            Text="{Binding SearchText, Mode=TwoWay}"
                            Style="{StaticResource ParkingLotAutoSuggestBoxStyle}"
                            TextBoxStyle="{StaticResource ParkingLotSearchTextBoxStyle}"
                            ItemContainerStyle="{StaticResource ParkingLotAutoSuggestBoxSuggestionItemContainerStyle}"
                            >
                            <AutoSuggestBox.ItemTemplate>
                                <DataTemplate x:DataType="models:AddressSearchSuggestionItem">
                                    <StackPanel Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemStyle}">
                                        <TextBlock
                                            Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemStreetStyle}"
                                            Text="{x:Bind Street, Mode=OneTime}"
                                            Visibility="{x:Bind Street, Mode=OneTime, Converter={StaticResource StringToVisibilityConverter}}" />
                                        <TextBlock
                                            Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemNeighborhoodStyle}"
                                            Text="{x:Bind Neighborhood, Mode=OneTime}"
                                            Visibility="{x:Bind Neighborhood, Mode=OneTime, Converter={StaticResource StringToVisibilityConverter}}" />
                                        <TextBlock
                                            Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemDistrictStyle}"
                                            Text="{x:Bind District, Mode=OneTime}"
                                            Visibility="{x:Bind District, Mode=OneTime, Converter={StaticResource StringToVisibilityConverter}}" />
                                        <TextBlock
                                            Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemTownStyle}"
                                            Text="{x:Bind Town, Mode=OneTime}"
                                            Visibility="{x:Bind Town, Mode=OneTime, Converter={StaticResource StringToVisibilityConverter}}" />
                                    </StackPanel>
                                </DataTemplate>
                            </AutoSuggestBox.ItemTemplate>
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="TextChanged">
                                    <core:InvokeCommandAction Command="{Binding SearchTextChangedCommand}" />
                                </core:EventTriggerBehavior>
                                <core:EventTriggerBehavior EventName="QuerySubmitted">
                                    <core:InvokeCommandAction Command="{Binding SearchResultChosenCommand}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </AutoSuggestBox>
                        <Button
                            x:Uid="ParkingLotListFilterBtn"
                            x:Name="ParkingLotListFilterBtn"
                            RelativePanel.LeftOf="ParkingLotListRefreshBtn"
                            Tag=""
                            Style="{StaticResource NavIconButtonStyle}">
                            <Button.Flyout>
                                <MenuFlyout>
                                    <ToggleMenuFlyoutItem
                                        x:Uid="ParkingLotFilterMenuItemAlphabetically"
                                        x:Name="ParkingLotFilterMenuItemAlphabetically"
                                        Command="{Binding SetParkingLotFilterToAlphabeticallyCommand}"
                                        Text="Alphabetisch" />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="ParkingLotFilterMenuItemAvailability"
                                        x:Name="ParkingLotFilterMenuItemAvailability"
                                        Command="{Binding SetParkingLotFilterToAvailabilityCommand}"
                                        Text="Belegung" />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="ParkingLotFilterMenuItemDistance"
                                        x:Name="ParkingLotFilterMenuItemDistance"
                                        Command="{Binding SetParkingLotFilterToDistanceCommand}"
                                        Text="Entfernung" />
                                    <MenuFlyoutSeparator />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="ParkingLotFilterAscending"
                                        IsChecked="{Binding ParkingLotFilterAscending, Mode=TwoWay}"
                                        Text="Aufsteigend" />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="ParkingLotFilterDescending"
                                        IsChecked="{Binding ParkingLotFilterAscending, Mode=TwoWay, Converter={StaticResource NegativeBooleanConverter}}"
                                        Text="Absteigend" />
                                    <MenuFlyoutSeparator />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="ParkingLotFilterMenuItemGrouping"
                                        x:Name="ParkingLotFilterMenuItemGrouping"
                                        IsChecked="{Binding ParkingLotFilterIsGrouped, Mode=TwoWay}"
                                        Text="Gruppierung" />
                                </MenuFlyout>
                            </Button.Flyout>
                        </Button>
                        <Button
                            x:Name="ParkingLotListRefreshBtn"
                            x:Uid="ParkingLotListRefreshBtn"
                            RelativePanel.AlignRightWithPanel="True"
                            Command="{Binding RefreshCityDetailsCommand}"
                            Tag=""
                            Style="{StaticResource NavIconButtonStyle}" />
                    </RelativePanel>
                    <!-- #endregion -->
                    <!-- #region ParkingLot list -->
                    <RelativePanel
                        x:Name="ParkingLotListPanel"
                        RelativePanel.Below="ParkingLotListTopBar"
                        RelativePanel.AlignLeftWithPanel="True"
                        RelativePanel.AlignBottomWithPanel="True"
                        Style="{ThemeResource ParkingLotListPanelStyle}">
                        <ProgressBar
                            x:Name="ParkingLotListProgressBar"
                            Style="{ThemeResource ParkingLotListProgressBarStyle}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            />
                        <ListView
                            x:Name="ParkingLotList"
                            Grid.Row="1"
                            ItemsSource="{Binding Source={StaticResource SelectedCityData}}"
                            SelectedItem="{Binding SelectedParkingLot, Mode=TwoWay}"
                            Style="{ThemeResource ParkingLotListStyle}"
                            Header="{Binding SelectedCityData.LastUpdated, Mode=OneWay, Converter={StaticResource DateTimeToStringConverter}}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="OfflineHint"
                            >
                            <ListView.GroupStyle>
                                <GroupStyle
                                    HidesIfEmpty="True"
                                    HeaderContainerStyle="{StaticResource ParkingLotListHeaderContainerStyle}"
                                    >
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Text="{Binding Header, Converter={StaticResource TrimTextConverter}}"
                                                Style="{ThemeResource ParkingLotListHeaderStyle}"/>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </ListView.GroupStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="models:SelectableParkingLot">
                                    <StackPanel Style="{ThemeResource ParkingLotListItemStyle}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <controls:ParkingLotLoadDonut
                                                x:Phase="20"
                                                Grid.Row="0"
                                                Grid.RowSpan="3"
                                                Grid.Column="0"
                                                Style="{ThemeResource ParkingLotListDonutStyle}"
                                                ParkingLot="{x:Bind ParkingLot, Mode=OneWay}"/>
                                            <TextBlock
                                                x:Phase="1"
                                                Style="{ThemeResource ParkingLotListTitleStyle}"
                                                Text="{x:Bind ParkingLot.Name, Mode=OneWay, Converter={StaticResource TrimTextConverter}}"
                                                Grid.Row="0"
                                                Grid.Column="1"/>
                                            <TextBlock
                                                Grid.Row="0"
                                                Grid.Column="2"
                                                Style="{ThemeResource ParkingLotHasForecastTextStyle}"
                                                x:Uid="ParkingLotHasForecastText"
                                                Text="VORHERSAGE"
                                                x:Phase="0"
                                                Visibility="{x:Bind ParkingLot.HasForecast, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            <StackPanel
                                                Orientation="Horizontal"
                                                Grid.Row="2"
                                                Grid.Column="1"
                                                >
                                                <TextBlock
                                                    Style="{ThemeResource ParkingLotListDetailStyle}"
                                                    Text="{x:Bind ParkingLot.FreeLots, Mode=OneWay}"
                                                    x:Phase="2"
                                                    FontWeight="SemiBold" />
                                                <TextBlock
                                                    Style="{ThemeResource ParkingLotListDetailStyle}"
                                                    Padding="3,0,3,0"
                                                    Text="/"
                                                    Visibility="{x:Bind ParkingLot.TotalLots, Mode=OneWay, Converter={StaticResource IntGreaterZeroToVisibilityConverter}}"
                                                    />
                                                <TextBlock
                                                    Style="{ThemeResource ParkingLotListDetailStyle}"
                                                    Text="{x:Bind ParkingLot.TotalLots, Mode=OneWay}"
                                                    Visibility="{x:Bind ParkingLot.TotalLots, Mode=OneWay, Converter={StaticResource IntGreaterZeroToVisibilityConverter}}"
                                                    x:Phase="2" />
                                                <TextBlock
                                                    x:Uid="ParkingLotListDetailFree"
                                                    Style="{ThemeResource ParkingLotListDetailStyle}"
                                                    Text="frei"
                                                    />
                                            </StackPanel>
                                            <TextBlock
                                                Grid.Row="2"
                                                Grid.Column="2"
                                                Style="{ThemeResource ParkingLotListDistanceStyle}"
                                                x:Phase="6"
                                                Text="{x:Bind ParkingLot, Mode=OneWay, Converter={StaticResource DistanceToParkingLotConverter}}"
                                                />
                                            <StackPanel
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Grid.ColumnSpan="2"
                                                Padding="0,0,0,3"
                                                x:Phase="0"
                                                Visibility="{x:Bind IsSelected, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                >
                                                <TextBlock
                                                    Visibility="{x:Bind ParkingLot.Address, Mode=OneWay, Converter={StaticResource StringToVisibilityConverter}}"
                                                    Text="{x:Bind ParkingLot.Address, Mode=OneWay, Converter={StaticResource TrimTextConverter}}"
                                                    Style="{ThemeResource ParkingLotListAdditionalDetailsStyle}"
                                                    x:Phase="6"
                                                    />
                                                <TextBlock
                                                    Visibility="{x:Bind ParkingLot.LotType, Mode=OneWay, Converter={StaticResource StringToVisibilityConverter}}"
                                                    Text="{x:Bind ParkingLot.LotType, Mode=OneWay, Converter={StaticResource TrimTextConverter}}"
                                                    Style="{ThemeResource ParkingLotListAdditionalDetailsStyle}"
                                                    x:Phase="6"
                                                    />
                                                <TextBlock
                                                    Visibility="{x:Bind ParkingLot.State, Mode=OneWay, Converter={StaticResource ParkingLotStateToVisibilityConverter}}"
                                                    Text="{x:Bind ParkingLot.State, Mode=OneWay, Converter={StaticResource ParkingLotStateStringConverter}}"
                                                    Style="{ThemeResource ParkingLotListAdditionalDetailsStyle}"
                                                    x:Phase="6"
                                                    />
                                            </StackPanel>
                                        </Grid>
                                        <StackPanel
                                            x:Phase="0"
                                            Visibility="{x:Bind IsSelected, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">

                                            <controls:ParkingLotForecastChart
                                                x:Name="ForecastChart"
                                                Visibility="{x:Bind ParkingLot.HasForecast, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                HorizontalAlignment="Stretch"
                                                x:Phase="7"
                                                DataContext="{x:Bind ParkingLot, Mode=OneWay}"
                                                IsSelected="{x:Bind IsSelected, Mode=OneWay}"
                                                />

                                            <Button Content="Wegbeschreibung"
                                                    Tag="&#xE816;"
                                                    x:Uid="ParkingLotListNavigationBtn"
                                                    Style="{ThemeResource ParkingLotListNavigationButton}"
                                                    Command="{Binding Main.NavigateToParkingLotCommand, Source={StaticResource Locator}}"
                                                    x:Phase="6"
                                                    CommandParameter="{x:Bind ParkingLot, Mode=OneWay}"/>
                                        </StackPanel>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <Border 
                            RelativePanel.AlignTopWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource OfflineHintBorderStyle}"
                            Visibility="{Binding InternetAvailable, Converter={StaticResource NegativeBooleanToVisibilityConverter}}"
                            x:Name="OfflineHint">
                            <TextBlock
                                Style="{StaticResource OfflineHintTextStyle}"
                                x:Uid="OfflineHintLabel"
                                Text="Du bist offline"/>
                        </Border>
                    </RelativePanel>
                    <!-- #endregion -->
                    <!-- #region Map -->
                    <RelativePanel 
                        x:Name="ParkingLotMap"
                        RelativePanel.RightOf="ParkingLotListPanel"
                        RelativePanel.AlignTopWithPanel="True"
                        RelativePanel.AlignRightWithPanel="True"
                        RelativePanel.AlignBottomWithPanel="True"
                        Style="{StaticResource ParkingLotMap}"
                        >
                        <RelativePanel
                            x:Name="MapTopBar"
                            Style="{ThemeResource MapTopBarStyle}"
                            RelativePanel.AlignTopWithPanel="True"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            />
                        <maps:MapControl
                            x:Name="Map"
                            Center="{Binding MapCenter, Mode=TwoWay}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.AlignBottomWithPanel="True"
                            RelativePanel.AlignTopWithPanel="True"
                            MapServiceToken="ODfhhm4fu4fI3bK7netn~Fld-dSJIU1C5srIK9bLJWA~AhmDa72RljmI6HW5OV0kEFt0sN_eRk-JF_Eu03jpeiigdHuK6fQ70zEBy5QaOoYq"
                            />
                    </RelativePanel>
                    <!-- #endregion -->
                    <!-- #region Container for background drawings -->
                    <Grid 
                        x:DeferLoadStrategy="Lazy"
                        x:Name="BackgroundDrawingContainer"
                        Margin="-500,-500,0,0" />
                    <!-- #endregion -->
                </RelativePanel>
            </SplitView.Content>
            <!-- #endregion -->
        </SplitView>
        <!-- #endregion -->
        <!-- #region Info dialog -->
        <controls:InfoDialog
            Visibility="Collapsed"
            x:Name="InfoDialog"
            x:DeferLoadStrategy="Lazy" />
        <!-- #endregion -->
    </Grid>
</Page>
<Page
    x:Class="ParkenDD.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:ParkenDD.Models"
    xmlns:windowsStateTriggers="using:WindowsStateTriggers"
    xmlns:triggers="using:ParkenDD.Triggers"
    xmlns:controls="using:ParkenDD.Controls"
    xmlns:maps="using:Windows.UI.Xaml.Controls.Maps"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:ParkenDD.Behaviors"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    DataContext="{Binding Main, Source={StaticResource Locator}}">


    <interactivity:Interaction.Behaviors>
        <behaviors:WindowSizeBehavior 
            PreferredMinSize="300,450"
            />
        <behaviors:TitleBarBehavior
            ButtonBackgroundColor="Transparent"
            ButtonForegroundColor="{StaticResource BlueColor}"
            ButtonInactiveBackgroundColor="Transparent"
            ButtonInactiveForegroundColor="{StaticResource LightBlueColor}"
            ButtonHoverBackgroundColor="{StaticResource BlueColor}"
            ButtonHoverForegroundColor="#FFFFFF"
            ButtonPressedBackgroundColor="{StaticResource DarkBlueColor}"
            ButtonPressedForegroundColor="#FFFFFF"    
            />
        <behaviors:StatusBarBehavior
            ForegroundColor="#666666"
            BackgroundColor="#FFFFFF"
            />
    </interactivity:Interaction.Behaviors>

    <Page.Resources>
        <CollectionViewSource
            x:Key="SelectedCityData"
            ItemsPath="ParkingLots"
            />
    </Page.Resources>

    <SplitView
        OpenPaneLength="200"
        x:Name="SplitView"
        CompactPaneLength="48"
        DisplayMode="Overlay"
        >
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="hideHamburger">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1000" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplitView.DisplayMode" Value="Inline" />
                        <Setter Target="SplitView.IsPaneOpen" Value="True" />
                        <Setter Target="ParkingLotListMenuBtn.Visibility" Value="Collapsed" />
                        <Setter Target="SplitViewMenuBtn.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="mobile">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ParkingLotMap.(RelativePanel.AlignTopWithPanel)" Value="False"/>
                        <Setter Target="ParkingLotMap.(RelativePanel.AlignBottomWithPanel)" Value="False"/>
                        <Setter Target="ParkingLotMap.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                        <Setter Target="ParkingLotListPanel.(RelativePanel.AlignRightWithPanel)" Value="True"/>
                        <Setter Target="ParkingLotListPanel.(RelativePanel.AlignTopWithPanel)" Value="False"/>
                        <Setter Target="ParkingLotMap.(FrameworkElement.Height)" Value="150"/>
                        <Setter Target="ParkingLotListPanel.(FrameworkElement.Width)" Value="Auto"/>
                        <Setter Target="ParkingLotListTopBar.(FrameworkElement.Width)" Value="Auto"/>
                        <Setter Target="ParkingLotListTopBar.(RelativePanel.AlignRightWithPanel)" Value="True"/>
                        <Setter Target="ParkingLotMap.(RelativePanel.Below)" Value="ParkingLotListTopBar"/>
                        <Setter Target="ParkingLotListPanel.(RelativePanel.Below)" Value="ParkingLotMap" />
                        <Setter Target="ParkingLotMap.(RelativePanel.RightOf)" Value="" />
                        <Setter Target="MapTopBar.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="desktop">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="searchFocussed">
                    <VisualState.StateTriggers>
                        <triggers:ItemFocusStateTrigger Value="{Binding ElementName=SearchBox}"  />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ParkingLotListRefreshBtn.Visibility" Value="Collapsed" />
                        <Setter Target="ParkingLotListFilterBtn.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="loadingCity">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:EqualsStateTrigger Value="{Binding LoadingCity}" EqualTo="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ParkingLotListProgressBar.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="notLoadingCity">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:EqualsStateTrigger Value="{Binding LoadingCity}" EqualTo="False" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ParkingLotListProgressBar.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState x:Name="loadingCities">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:EqualsStateTrigger Value="{Binding LoadingMetaData}" EqualTo="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SelectCityProgressBar.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="notLoadingCities">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:EqualsStateTrigger Value="{Binding LoadingMetaData}" EqualTo="False" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SelectCityProgressBar.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState x:Name="mobileView">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplitViewTopBar.Height" Value="48" />
                        <Setter Target="SplitViewTopBar.Padding" Value="0" />
                        <Setter Target="ParkingLotListTopBar.Height" Value="48" />
                        <Setter Target="ParkingLotListTopBar.Padding" Value="0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <SplitView.Pane>
            <Grid 
                Style="{ThemeResource SplitViewContainerStyle}"
                >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <RelativePanel
                    x:Name="SplitViewTopBar"
                    Style="{ThemeResource SplitViewTopBarStyle}"
                    Grid.Row="0"
                    >
                    <Button
                        x:Name="SplitViewMenuBtn"
                        Click="ToggleSplitView"
                        Tag=""
                        Style="{StaticResource SplitViewNavIconButtonStyle}" />
                    <TextBlock
                        RelativePanel.RightOf="SplitViewMenuBtn"
                        RelativePanel.AlignTopWithPanel="True"
                        RelativePanel.AlignBottomWithPanel="True"
                        Text="ParkenDD"
                        Style="{ThemeResource SplitViewLogoStyle}"
                        />
                </RelativePanel>
                <ProgressBar
                    x:Name="SelectCityProgressBar"
                    Grid.Row="1"
                    Style="{ThemeResource SelectCityProgressBarStyle}"
                    />
                <!-- TODO: use x:Bind for SelectedItem when MS will have worked this out... -->
                <ListView
                    Grid.Row="1"
                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                    ItemsSource="{x:Bind Vm.MetaData.Cities.List}"
                    SelectedItem="{Binding SelectedCity, Mode=TwoWay}"
                    ItemContainerStyle="{StaticResource SelectCityListContainerStyle}"
                    SelectionChanged="SplitViewItemSelectionChanged"
                    >
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <TextBlock
                                Text="{Binding}"
                                Style="{ThemeResource SplitViewCityItemTextStyle}"/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </SplitView.Pane>
        <SplitView.Content>
            <RelativePanel
                x:Name="RelativePanelContainer">
                <RelativePanel
                    x:Name="ParkingLotListTopBar"
                    RelativePanel.AlignTopWithPanel="True"
                    RelativePanel.AlignLeftWithPanel="True"
                    Width="300"
                    Style="{ThemeResource ParkingLotListTopBarStyle}">
                    <Button
                        x:Name="ParkingLotListMenuBtn"
                        RelativePanel.AlignLeftWithPanel="True"
                        Click="ToggleSplitView"
                        Tag=""
                        Style="{StaticResource NavIconButtonStyle}" />
                    <AutoSuggestBox
                        x:Name="SearchBox"
                        RelativePanel.LeftOf="ParkingLotListFilterBtn"
                        RelativePanel.RightOf="ParkingLotListMenuBtn"
                        RelativePanel.AlignTopWithPanel="True"
                        RelativePanel.AlignBottomWithPanel="True"
                        PlaceholderText="Adresse suchen..."
                        ItemsSource="{Binding SearchSuggestions}"
                        Text="{Binding SearchText, Mode=TwoWay}"
                        Style="{StaticResource ParkingLotAutoSuggestBoxStyle}"
                        TextBoxStyle="{StaticResource ParkingLotSearchTextBoxStyle}"
                        QueryIcon="Find"
                        ItemContainerStyle="{StaticResource ParkingLotAutoSuggestBoxSuggestionItemContainerStyle}"
                        >
                        <AutoSuggestBox.ItemTemplate>
                            <DataTemplate x:DataType="models:AddressSearchSuggestionItem">
                                <StackPanel Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemStyle}">
                                    <TextBlock
                                        Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemStreetStyle}"
                                        Text="{x:Bind Street, Mode=OneTime}"
                                        Visibility="{x:Bind Street, Mode=OneTime, Converter={StaticResource StringToVisibilityConverter}}" />
                                    <TextBlock
                                        Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemNeighborhoodStyle}"
                                        Text="{x:Bind Neighborhood, Mode=OneTime}"
                                        Visibility="{x:Bind Neighborhood, Mode=OneTime, Converter={StaticResource StringToVisibilityConverter}}" />
                                    <TextBlock
                                        Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemDistrictStyle}"
                                        Text="{x:Bind District, Mode=OneTime}"
                                        Visibility="{x:Bind District, Mode=OneTime, Converter={StaticResource StringToVisibilityConverter}}" />
                                    <TextBlock
                                        Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemTownStyle}"
                                        Text="{x:Bind Town, Mode=OneTime}"
                                        Visibility="{x:Bind Town, Mode=OneTime, Converter={StaticResource StringToVisibilityConverter}}" />
                                </StackPanel>
                            </DataTemplate>
                        </AutoSuggestBox.ItemTemplate>
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="TextChanged">
                                <core:InvokeCommandAction Command="{Binding SearchTextChangedCommand}" />
                            </core:EventTriggerBehavior>
                            <core:EventTriggerBehavior EventName="QuerySubmitted">
                                <core:InvokeCommandAction Command="{Binding SearchResultChosenCommand}" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                    </AutoSuggestBox>
                    <Button
                        x:Name="ParkingLotListFilterBtn"
                        RelativePanel.LeftOf="ParkingLotListRefreshBtn"
                        Tag=""
                        Style="{StaticResource NavIconButtonStyle}">
                        <Button.Flyout>
                            <MenuFlyout>
                                <ToggleMenuFlyoutItem
                                    x:Name="ParkingLotFilterMenuItemAlphabetically"
                                    Command="{Binding SetParkingLotFilterToAlphabeticallyCommand}"
                                    Text="Alphabetisch" />
                                <ToggleMenuFlyoutItem
                                    x:Name="ParkingLotFilterMenuItemAvailability"
                                    Command="{Binding SetParkingLotFilterToAvailabilityCommand}"
                                    Text="Belegung" />
                                <ToggleMenuFlyoutItem
                                    x:Name="ParkingLotFilterMenuItemDistance"
                                    Command="{Binding SetParkingLotFilterToDistanceCommand}"
                                    Text="Entfernung" />
                                <MenuFlyoutSeparator />
                                <ToggleMenuFlyoutItem
                                    IsChecked="{Binding ParkingLotFilterAscending, Mode=TwoWay}"
                                    Text="Aufsteigend" />
                                <ToggleMenuFlyoutItem
                                    IsChecked="{Binding ParkingLotFilterAscending, Mode=TwoWay, Converter={StaticResource NegativeBooleanConverter}}"
                                    Text="Absteigend" />
                                <MenuFlyoutSeparator />
                                <ToggleMenuFlyoutItem
                                    x:Name="ParkingLotFilterMenuItemGrouping"
                                    IsChecked="{Binding ParkingLotFilterIsGrouped, Mode=TwoWay}"
                                    Text="Gruppierung" />
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>
                    <Button
                        x:Name="ParkingLotListRefreshBtn"
                        RelativePanel.AlignRightWithPanel="True"
                        Command="{Binding RefreshCityDetailsCommand}"
                        Tag=""
                        Style="{StaticResource NavIconButtonStyle}" />
                </RelativePanel>
                <RelativePanel
                    x:Name="ParkingLotListPanel"
                    RelativePanel.Below="ParkingLotListTopBar"
                    RelativePanel.AlignLeftWithPanel="True"
                    RelativePanel.AlignBottomWithPanel="True"
                    Width="300"
                    Style="{ThemeResource ParkingLotListPanelStyle}">
                    <ProgressBar
                        x:Name="ParkingLotListProgressBar"
                        Style="{ThemeResource ParkingLotListProgressBarStyle}"
                        RelativePanel.AlignLeftWithPanel="True"
                        RelativePanel.AlignRightWithPanel="True"
                        />
                    <ListView
                        x:Name="ParkingLotList"
                        Grid.Row="1"
                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                        ItemsSource="{Binding Source={StaticResource SelectedCityData}}"
                        SelectedItem="{Binding SelectedParkingLot, Mode=TwoWay}"
                        Style="{ThemeResource ParkingLotListStyle}"
                        SelectionMode="Single"
                        Header="{Binding SelectedCityData.LastUpdated, Converter={StaticResource DateTimeToStringConverter}}"
                        IsMultiSelectCheckBoxEnabled="False"
                        RelativePanel.AlignLeftWithPanel="True"
                        RelativePanel.AlignRightWithPanel="True"
                        ItemContainerStyle="{StaticResource SelectCityListContainerStyle}">
                        <ListView.GroupStyle>
                            <GroupStyle
                                HidesIfEmpty="True"
                                HeaderContainerStyle="{StaticResource ParkingLotListHeaderContainerStyle}"
                                >
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock
                                            Text="{Binding Header, Converter={StaticResource TrimTextConverter}}"
                                            Style="{ThemeResource ParkingLotListHeaderStyle}"/>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ListView.GroupStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="models:SelectableParkingLot">
                                <StackPanel Style="{ThemeResource ParkingLotListItemStyle}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <controls:ParkingLotLoadDonut
                                            Grid.Row="0"
                                            Grid.RowSpan="3"
                                            Grid.Column="0"
                                            Style="{ThemeResource ParkingLotListDonutStyle}"
                                            ParkingLot="{x:Bind ParkingLot, Mode=OneWay}"/>
                                        <TextBlock Style="{ThemeResource ParkingLotListTitleStyle}"
                                                    Text="{x:Bind ParkingLot.Name, Mode=OneWay, Converter={StaticResource TrimTextConverter}}"
                                                Grid.Row="0"
                                                Grid.Column="1"/>
                                        <TextBlock
                                            Grid.Row="0"
                                            Grid.Column="2"
                                            Style="{ThemeResource ParkingLotHasForecastTextStyle}"
                                            Text="VORHERSAGE"
                                            Visibility="{x:Bind ParkingLot.HasForecast, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                        <TextBlock
                                            Grid.Row="2"
                                            Grid.Column="1"
                                            Style="{ThemeResource ParkingLotListDetailStyle}"
                                            >
                                            <Run Text="{x:Bind ParkingLot.FreeLots, Mode=OneWay}" FontWeight="SemiBold" />
                                            <Run Text="/" />
                                            <Run Text="{x:Bind ParkingLot.TotalLots, Mode=OneWay}" />
                                            <Run Text="frei" />
                                        </TextBlock>
                                        <TextBlock
                                            Grid.Row="2"
                                            Grid.Column="2"
                                            Style="{ThemeResource ParkingLotListDistanceStyle}"
                                            Text="{x:Bind ParkingLot, Mode=OneWay, Converter={StaticResource DistanceToParkingLotConverter}}"
                                            />
                                        <StackPanel
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Grid.ColumnSpan="2"
                                            Visibility="{x:Bind ParkingLot.Address, Mode=OneWay, Converter={StaticResource StringToVisibilityConverter}}">
                                            <TextBlock
                                            Visibility="{x:Bind IsSelected, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                Text="{x:Bind ParkingLot.Address, Mode=OneWay, Converter={StaticResource TrimTextConverter}}"
                                                Style="{ThemeResource ParkingLotListAddressStyle}"
                                                />
                                        </StackPanel>
                                    </Grid>
                                    <StackPanel
                                        Visibility="{x:Bind IsSelected, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        
                                        <controls:ParkingLotForecastChart
                                            Visibility="{x:Bind ParkingLot.HasForecast, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            HorizontalAlignment="Stretch"
                                            DataContext="{x:Bind ParkingLot, Mode=OneWay}"
                                            />

                                        <Button Content="Wegbeschreibung"
                                                Tag="&#xE816;"
                                                Style="{ThemeResource ParkingLotListNavigationButton}"
                                                Command="{Binding Main.NavigateToParkingLotCommand, Source={StaticResource Locator}}"
                                                CommandParameter="{x:Bind ParkingLot, Mode=OneWay}"/>
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </RelativePanel>
                <RelativePanel 
                    x:Name="ParkingLotMap"
                    RelativePanel.RightOf="ParkingLotListPanel"
                    RelativePanel.AlignTopWithPanel="True"
                    RelativePanel.AlignRightWithPanel="True"
                    RelativePanel.AlignBottomWithPanel="True">
                    <RelativePanel
                        x:Name="MapTopBar"
                        Style="{ThemeResource MapTopBarStyle}"
                        RelativePanel.AlignTopWithPanel="True"
                        RelativePanel.AlignLeftWithPanel="True"
                        RelativePanel.AlignRightWithPanel="True"
                        />
                    <maps:MapControl
                        x:Name="Map"
                        Center="{Binding MapCenter, Mode=TwoWay}"
                        RelativePanel.AlignLeftWithPanel="True"
                        RelativePanel.AlignRightWithPanel="True"
                        RelativePanel.AlignBottomWithPanel="True"
                        RelativePanel.AlignTopWithPanel="True"
                        MapServiceToken="ODfhhm4fu4fI3bK7netn~Fld-dSJIU1C5srIK9bLJWA~AhmDa72RljmI6HW5OV0kEFt0sN_eRk-JF_Eu03jpeiigdHuK6fQ70zEBy5QaOoYq"
                        />
                </RelativePanel>
                <Grid 
                    x:Name="BackgroundDrawingContainer"
                    Margin="-500,-500,0,0" />
            </RelativePanel>
        </SplitView.Content>
    </SplitView>
</Page>
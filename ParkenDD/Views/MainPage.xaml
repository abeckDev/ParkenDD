<Page
    x:Class="ParkenDD.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:ParkenDD.Models"
    xmlns:apiModels="using:ParkenDD.Api.Models"
    xmlns:windowsStateTriggers="using:WindowsStateTriggers"
    xmlns:triggers="using:ParkenDD.Triggers"
    xmlns:controls="using:ParkenDD.Controls"
    xmlns:maps="using:Windows.UI.Xaml.Controls.Maps"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:ParkenDD.Behaviors"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:utils="using:ParkenDD.Utils"
    xmlns:media="using:Microsoft.Xaml.Interactions.Media"
    mc:Ignorable="d"
    Background="#FFFFFF"
    DataContext="{Binding Main, Source={StaticResource Locator}}">

    <!-- #region Behaviors -->
    <interactivity:Interaction.Behaviors>
        <behaviors:WindowSizeBehavior
            PreferredMinSize="300,450"
            />
        <behaviors:TitleBarBehavior
            ButtonBackgroundColor="Transparent"
            ButtonForegroundColor="{StaticResource BlueColor}"
            ButtonInactiveBackgroundColor="Transparent"
            ButtonInactiveForegroundColor="{StaticResource LightBlueColor}"
            ButtonHoverBackgroundColor="{StaticResource BlueColor}"
            ButtonHoverForegroundColor="#FFFFFF"
            ButtonPressedBackgroundColor="{StaticResource DarkBlueColor}"
            ButtonPressedForegroundColor="#FFFFFF"
            />
        <behaviors:StatusBarBehavior
            ForegroundColor="#666666"
            BackgroundColor="#FFFFFF"
            />
    </interactivity:Interaction.Behaviors>
    <!-- #endregion -->

    <!-- #region Page resources -->
    <Page.Resources>
        <CollectionViewSource
            x:Key="SelectedCityData"
            ItemsPath="ParkingLots"
            />
    </Page.Resources>
    <!-- #endregion -->

    <Grid>
        <!-- #region VisualStateGroups -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="hideHamburgerVisualState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1000" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplitView.DisplayMode" Value="Inline" />
                        <Setter Target="SplitView.IsPaneOpen" Value="True" />
                        <Setter Target="ParkingLotListMenuBtn.Visibility" Value="Collapsed" />
                        <Setter Target="SplitViewMenuBtn.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="ResponsiveStateGroup">
                <VisualState x:Name="desktopViewVisualState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ParkingLotMap.(RelativePanel.AlignTopWithPanel)" Value="True"/>
                        <Setter Target="ParkingLotMap.(RelativePanel.AlignBottomWithPanel)" Value="True"/>
                        <Setter Target="ParkingLotMap.(RelativePanel.AlignLeftWithPanel)" Value="False"/>
                        <Setter Target="ParkingLotMap.Height" Value="Auto"/>
                        <Setter Target="ParkingLotMap.(RelativePanel.Below)" Value=""/>
                        <Setter Target="ParkingLotMap.(RelativePanel.RightOf)" Value="ParkingLotListPanel" />
                        <Setter Target="ParkingLotMap.BorderThickness" Value="1,0,0,0" />
                        <Setter Target="ParkingLotListPanel.(RelativePanel.AlignRightWithPanel)" Value="False"/>
                        <Setter Target="ParkingLotListPanel.(RelativePanel.Below)" Value="ParkingLotListTopBar" />
                        <Setter Target="ParkingLotListPanel.BorderThickness" Value="0"/>
                        <Setter Target="ParkingLotListPanel.Width" Value="300"/>
                        <Setter Target="ParkingLotListTopBar.Width" Value="300"/>
                        <Setter Target="ParkingLotListTopBar.(RelativePanel.AlignRightWithPanel)" Value="False"/>
                        <Setter Target="MapTopBar.Height" Value="42"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="searchFocusedVisualState">
                    <VisualState.StateTriggers>
                        <triggers:AutoSuggestBoxFocusNotEmptyStateTrigger Value="{Binding ElementName=SearchBox}"  />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ParkingLotListRefreshBtn.Visibility" Value="Collapsed" />
                        <Setter Target="ParkingLotListFilterBtn.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="loadingCityVisualState">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:CompositeStateTrigger Operator="Or">
                            <windowsStateTriggers:EqualsStateTrigger Value="{x:Bind Vm.LoadingCity, Mode=OneWay}" EqualTo="True" />
                            <windowsStateTriggers:CompositeStateTrigger Operator="And">
                                <windowsStateTriggers:EqualsStateTrigger Value="{x:Bind Vm.LoadingMetaData, Mode=OneWay}" EqualTo="True" />
                                <windowsStateTriggers:EqualsStateTrigger Value="{Binding CurrentState.Name, ElementName=ResponsiveStateGroup}" EqualTo="desktopViewVisualState" />
                            </windowsStateTriggers:CompositeStateTrigger>
                        </windowsStateTriggers:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ParkingLotListProgressBar.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState x:Name="loadingMetaDataVisualState">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:EqualsStateTrigger Value="{x:Bind Vm.LoadingMetaData, Mode=OneWay}" EqualTo="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SelectCityProgressBar.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState x:Name="desktopDeviceState">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:DeviceFamilyStateTrigger DeviceFamily="Desktop"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MapTopBar.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="mobileDeviceState">
                    <VisualState.StateTriggers>
                        <windowsStateTriggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ParkingLotListTopBar.Height" Value="48"/>
                        <Setter Target="ParkingLotListTopBar.Padding" Value="0"/>
                        <Setter Target="SplitViewPane.Margin" Value="0,-30,0,0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <!-- #endregion -->
        <!-- #region SplitView -->
        <SplitView
            OpenPaneLength="200"
            x:Name="SplitView"
            CompactPaneLength="48"
            DisplayMode="Overlay"
            >
            <!-- #region Pane -->
            <SplitView.Pane>
                <Grid
                    x:Name="SplitViewPane"
                    Style="{ThemeResource SplitViewContainerStyle}"
                    BorderThickness="0,0,1,0"
                    BorderBrush="{StaticResource DarkBlueBrush}"
                    >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <RelativePanel
                        x:Name="SplitViewTopBar"
                        Style="{ThemeResource SplitViewTopBarStyle}"
                        Grid.Row="0"
                        >
                        <Button
                            x:Uid="SplitViewMenuBtn"
                            x:Name="SplitViewMenuBtn"
                            Click="ToggleSplitView"
                            Tag=""
                            Style="{StaticResource SplitViewNavIconButtonStyle}" />
                        <TextBlock
                            RelativePanel.RightOf="SplitViewMenuBtn"
                            RelativePanel.AlignTopWithPanel="True"
                            RelativePanel.AlignBottomWithPanel="True"
                            Text="ParkenDD"
                            Style="{ThemeResource SplitViewLogoStyle}"
                            />
                    </RelativePanel>
                    <ProgressBar
                        x:Name="SelectCityProgressBar"
                        Visibility="Collapsed"
                        Grid.Row="1"
                        Style="{ThemeResource SelectCityProgressBarStyle}"
                        />
                    <ListView
                        Grid.Row="1"
                        x:Name="MetaDataCityListView"
                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                        ItemsSource="{x:Bind Vm.MetaDataCities, Mode=OneWay}"
                        SelectedItem="{x:Bind Vm.SelectedCity, Mode=OneWay}"
                        Style="{StaticResource CityListStyle}"
                        SelectionChanged="SplitViewItemSelectionChanged"
                        >
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Tapped">
                                <core:InvokeCommandAction
                                    Command="{Binding Main.CityChosenCommand, Source={StaticResource Locator}}"
                                    CommandParameter="{Binding Path=SelectedItem, ElementName=MetaDataCityListView}" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="apiModels:MetaDataCityRow">
                                <TextBlock
                                    Text="{x:Bind Name, Mode=OneWay}"
                                    Style="{ThemeResource SplitViewCityItemTextStyle}"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Button
                        Grid.Row="2"
                        Command="{Binding ShowInfoDialogCommand}"
                        Click="ShowInfoDialogButtonClick"
                        Style="{StaticResource AboutButtonStyle}">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock FontFamily="Segoe MDL2 Assets" Margin="0,2,4,0" FontSize="12">&#xE946;</TextBlock>
                                <TextBlock x:Uid="InfoTextLabel">Informationen</TextBlock>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                </Grid>
            </SplitView.Pane>
            <!-- #endregion -->
            <!-- #region Content -->
            <SplitView.Content>
                <RelativePanel
                    x:Name="RelativePanelContainer">
                    <!-- #region Toolbar -->
                    <RelativePanel
                        x:Name="ParkingLotListTopBar"
                        RelativePanel.AlignTopWithPanel="True"
                        RelativePanel.AlignLeftWithPanel="True"
                        RelativePanel.AlignRightWithPanel="True"
                        Style="{ThemeResource ParkingLotListTopBarStyle}">
                        <Button
                            x:Uid="ParkingLotListMenuBtn"
                            x:Name="ParkingLotListMenuBtn"
                            RelativePanel.AlignLeftWithPanel="True"
                            Click="ToggleSplitView"
                            Tag=""
                            Style="{StaticResource NavIconButtonStyle}" />
                        <AutoSuggestBox
                            x:Name="SearchBox"
                            x:Uid="SearchBox"
                            RelativePanel.LeftOf="ParkingLotListFilterBtn"
                            RelativePanel.RightOf="ParkingLotListMenuBtn"
                            RelativePanel.AlignTopWithPanel="True"
                            RelativePanel.AlignBottomWithPanel="True"
                            PlaceholderText="~Adresse suchen..."
                            ItemsSource="{x:Bind Vm.SearchSuggestions, Mode=OneWay}"
                            Text="{x:Bind Vm.SearchText, Mode=TwoWay}"
                            Style="{StaticResource ParkingLotAutoSuggestBoxStyle}"
                            TextBoxStyle="{StaticResource ParkingLotSearchTextBoxStyle}"
                            ItemContainerStyle="{StaticResource ParkingLotAutoSuggestBoxSuggestionItemContainerStyle}"
                            >
                            <AutoSuggestBox.ItemTemplate>
                                <DataTemplate x:DataType="models:AddressSearchSuggestionItem">
                                    <StackPanel Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemStyle}">
                                        <TextBlock
                                            Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemStreetStyle}"
                                            x:Phase="1"
                                            Text="{x:Bind Street, Mode=OneTime}"
                                            Visibility="{x:Bind Street, Mode=OneTime, Converter={StaticResource StringToVisibilityConverter}}" />
                                        <TextBlock
                                            Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemNeighborhoodStyle}"
                                            x:Phase="2"
                                            Text="{x:Bind Neighborhood, Mode=OneTime}"
                                            Visibility="{x:Bind Neighborhood, Mode=OneTime, Converter={StaticResource StringToVisibilityConverter}}" />
                                        <TextBlock
                                            Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemDistrictStyle}"
                                            x:Phase="3"
                                            Text="{x:Bind District, Mode=OneTime}"
                                            Visibility="{x:Bind District, Mode=OneTime, Converter={StaticResource StringToVisibilityConverter}}" />
                                        <TextBlock
                                            Style="{ThemeResource ParkingLotAutoSuggestBoxSuggestionItemTownStyle}"
                                            x:Phase="4"
                                            Text="{x:Bind Town, Mode=OneTime}"
                                            Visibility="{x:Bind Town, Mode=OneTime, Converter={StaticResource StringToVisibilityConverter}}" />
                                    </StackPanel>
                                </DataTemplate>
                            </AutoSuggestBox.ItemTemplate>
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="TextChanged">
                                    <core:InvokeCommandAction Command="{x:Bind Vm.SearchTextChangedCommand}" />
                                </core:EventTriggerBehavior>
                                <core:EventTriggerBehavior EventName="QuerySubmitted">
                                    <core:InvokeCommandAction Command="{x:Bind Vm.SearchResultChosenCommand}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </AutoSuggestBox>
                        <Button
                            x:Uid="ParkingLotListFilterBtn"
                            x:Name="ParkingLotListFilterBtn"
                            RelativePanel.LeftOf="ParkingLotListRefreshBtn"
                            Tag=""
                            Style="{StaticResource NavIconButtonStyle}">
                            <Button.Flyout>
                                <MenuFlyout>
                                    <ToggleMenuFlyoutItem
                                        x:Uid="ParkingLotFilterMenuItemAlphabetically"
                                        x:Name="ParkingLotFilterMenuItemAlphabetically"
                                        Command="{x:Bind Vm.SetParkingLotFilterToAlphabeticallyCommand}"
                                        Text="Alphabetisch" />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="ParkingLotFilterMenuItemAvailability"
                                        x:Name="ParkingLotFilterMenuItemAvailability"
                                        Command="{x:Bind Vm.SetParkingLotFilterToAvailabilityCommand}"
                                        Text="Belegung" />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="ParkingLotFilterMenuItemDistance"
                                        x:Name="ParkingLotFilterMenuItemDistance"
                                        Command="{x:Bind Vm.SetParkingLotFilterToDistanceCommand}"
                                        Text="Entfernung" />
                                    <MenuFlyoutSeparator />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="ParkingLotFilterAscending"
                                        IsChecked="{x:Bind Vm.ParkingLotFilterAscending, Mode=TwoWay}"
                                        Text="Aufsteigend" />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="ParkingLotFilterDescending"
                                        IsChecked="{x:Bind Vm.ParkingLotFilterAscending, Mode=TwoWay, Converter={StaticResource NegativeBooleanConverter}}"
                                        Text="Absteigend" />
                                    <MenuFlyoutSeparator />
                                    <ToggleMenuFlyoutItem
                                        x:Uid="ParkingLotFilterMenuItemGrouping"
                                        x:Name="ParkingLotFilterMenuItemGrouping"
                                        IsChecked="{x:Bind Vm.ParkingLotFilterIsGrouped, Mode=TwoWay}"
                                        Text="Gruppierung" />
                                </MenuFlyout>
                            </Button.Flyout>
                        </Button>
                        <Button
                            x:Name="ParkingLotListRefreshBtn"
                            x:Uid="ParkingLotListRefreshBtn"
                            RelativePanel.AlignRightWithPanel="True"
                            Command="{x:Bind Vm.RefreshCityDetailsCommand}"
                            Tag=""
                            Style="{StaticResource NavIconButtonStyle}" />
                    </RelativePanel>
                    <!-- #endregion -->
                    <!-- #region ParkingLot list -->
                    <RelativePanel
                        x:Name="ParkingLotListPanel"
                        RelativePanel.Below="ParkingLotMap"
                        RelativePanel.AlignLeftWithPanel="True"
                        RelativePanel.AlignRightWithPanel="True"
                        RelativePanel.AlignBottomWithPanel="True"
                        Style="{ThemeResource ParkingLotListPanelStyle}">
                        <ProgressBar
                            x:Name="ParkingLotListProgressBar"
                            Visibility="Collapsed"
                            Style="{ThemeResource ParkingLotListProgressBarStyle}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            />
                        <ListView
                            x:Name="ParkingLotList"
                            Grid.Row="1"
                            ItemsSource="{Binding Source={StaticResource SelectedCityData}}"
                            SelectedItem="{Binding SelectedParkingLot, Mode=TwoWay}"
                            Style="{ThemeResource ParkingLotListStyle}"
                            Header="{x:Bind Vm.SelectedCityData.LastUpdated, Mode=OneWay, Converter={StaticResource DateTimeToStringConverter}}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.Below="OfflineHint"
                            SelectionChanged="ParkingLotListSelectionChanged"
                            >
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <ItemsStackPanel ItemsUpdatingScrollMode="KeepItemsInView" />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.GroupStyle>
                                <GroupStyle
                                    HidesIfEmpty="True"
                                    HeaderContainerStyle="{StaticResource ParkingLotListHeaderContainerStyle}"
                                    >
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate x:DataType="models:ParkingLotListGroup">
                                            <TextBlock
                                                Text="{x:Bind Header, Mode=OneWay, Converter={StaticResource TrimTextConverter}}"
                                                Style="{ThemeResource ParkingLotListHeaderStyle}"/>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </ListView.GroupStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="apiModels:ParkingLot">
                                    <UserControl x:Name="ItemContainer" Background="#ffffff">
                                        <UserControl.Resources>
                                            <Storyboard x:Key="LoadedStoryboard">
                                                <!--<DoubleAnimation
                                                    Duration="0:0:0.500"
                                                    From="100"
                                                    To="0"
                                                    Storyboard.TargetProperty="X"
                                                    Storyboard.TargetName="ContainerTranslateTransform"
                                                    EnableDependentAnimation="True">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut" />
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation
                                                    Duration="0:0:0.5"
                                                    From="0"
                                                    To="1"
                                                    Storyboard.TargetProperty="Opacity"
                                                    Storyboard.TargetName="ItemContainer"
                                                    EnableDependentAnimation="True"
                                                    >
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut" />
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>-->
                                            </Storyboard>
                                        </UserControl.Resources>
                                        <interactivity:Interaction.Behaviors>
                                            <core:EventTriggerBehavior EventName="Loaded">
                                                <media:ControlStoryboardAction Storyboard="{StaticResource LoadedStoryboard}" />
                                            </core:EventTriggerBehavior>
                                        </interactivity:Interaction.Behaviors>
                                        <UserControl.RenderTransform>
                                            <TranslateTransform x:Name="ContainerTranslateTransform" />
                                        </UserControl.RenderTransform>
                                        <StackPanel Style="{ThemeResource ParkingLotListItemStyle}">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup>
                                                    <VisualState x:Name="HasParkingLotSituation" />
                                                    <VisualState x:Name="HasNoParkingLotSituation">
                                                        <VisualState.StateTriggers>
                                                            <windowsStateTriggers:EqualsStateTrigger Value="{x:Bind TotalLots, Mode=OneWay}" EqualTo="0" />
                                                        </VisualState.StateTriggers>
                                                        <VisualState.Setters>
                                                            <Setter Target="ParkingLotSituationContainer.Visibility" Value="Collapsed" />
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="SelectionStates">
                                                    <VisualState x:Name="Selected">
                                                        <VisualState.Setters>
                                                            <Setter Target="AdditionalDetailsContainer.Visibility" Value="Visible"/>
                                                            <Setter Target="ForecastChartContainer.Visibility" Value="Visible"/>
                                                            <Setter Target="ForecastChart.IsSelected" Value="True"/>
                                                            <Setter Target="ParkingLotLoadDonut.IsSelected" Value="True"/>
                                                            <Setter Target="ItemContainer.Background" Value="Transparent" />
                                                        </VisualState.Setters>
                                                        <Storyboard>
                                                            <DoubleAnimation
                                                                Duration="0:0:0.500"
                                                                From="50"
                                                                To="0"
                                                                Storyboard.TargetProperty="X"
                                                                Storyboard.TargetName="AdditionalDetailsContainerTransform"
                                                                EnableDependentAnimation="True">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <CubicEase EasingMode="EaseOut" />
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                            <DoubleAnimation
                                                                Duration="0:0:1"
                                                                From="0"
                                                                To="1"
                                                                Storyboard.TargetName="AdditionalDetailsContainer"
                                                                Storyboard.TargetProperty="Opacity"
                                                                EnableDependentAnimation="True">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <CubicEase EasingMode="EaseOut" />
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Unselected" />
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                </Grid.ColumnDefinitions>
                                                <controls:ParkingLotLoadDonut
                                                    x:Phase="20"
                                                    x:Name="ParkingLotLoadDonut"
                                                    Grid.Row="0"
                                                    Grid.RowSpan="2"
                                                    Grid.Column="0"
                                                    Style="{ThemeResource ParkingLotListDonutStyle}"
                                                    ParkingLot="{x:Bind Mode=OneWay}"
                                                    Animate="True"/>
                                                <TextBlock
                                                    x:Phase="1"
                                                    Style="{ThemeResource ParkingLotListTitleStyle}"
                                                    Text="{x:Bind Name, Mode=OneWay, Converter={StaticResource TrimTextConverter}}"
                                                    Grid.Row="0"
                                                    Grid.Column="1"/>
                                                <TextBlock
                                                    Grid.Row="0"
                                                    Grid.Column="2"
                                                    Style="{ThemeResource ParkingLotHasForecastTextStyle}"
                                                    x:Uid="ParkingLotHasForecastText"
                                                    Text="VORHERSAGE"
                                                    x:Phase="0"
                                                    Visibility="{x:Bind HasForecast, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                <controls:DistanceTextBlock
                                                    Grid.Row="1"
                                                    Grid.Column="2"
                                                    DataContext="{x:Bind Coordinates, Mode=OneWay}"
                                                    />
                                                <StackPanel
                                                    Grid.Row="1"
                                                    Grid.Column="1">
                                                    <StackPanel
                                                        Padding="0,0,0,3"
                                                        x:Name="AdditionalDetailsContainer"
                                                        Visibility="Collapsed"
                                                        >
                                                        <StackPanel.RenderTransform>
                                                            <TranslateTransform x:Name="AdditionalDetailsContainerTransform" />
                                                        </StackPanel.RenderTransform>
                                                        <TextBlock
                                                            Visibility="{x:Bind Address, Mode=OneWay, Converter={StaticResource StringToVisibilityConverter}}"
                                                            Text="{x:Bind Address, Mode=OneWay, Converter={StaticResource TrimTextConverter}}"
                                                            Style="{ThemeResource ParkingLotListAdditionalDetailsStyle}"
                                                            x:Phase="6"
                                                            />
                                                        <TextBlock
                                                            Visibility="{x:Bind LotType, Mode=OneWay, Converter={StaticResource StringToVisibilityConverter}}"
                                                            Text="{x:Bind LotType, Mode=OneWay, Converter={StaticResource TrimTextConverter}}"
                                                            Style="{ThemeResource ParkingLotListAdditionalDetailsStyle}"
                                                            x:Phase="6"
                                                            />
                                                        <TextBlock
                                                            Visibility="{x:Bind State, Mode=OneWay, Converter={StaticResource ParkingLotStateToVisibilityConverter}}"
                                                            Text="{x:Bind State, Mode=OneWay, Converter={StaticResource ParkingLotStateStringConverter}}"
                                                            Style="{ThemeResource ParkingLotListAdditionalDetailsStyle}"
                                                            x:Phase="6"
                                                            />
                                                    </StackPanel>
                                                    <StackPanel Orientation="Horizontal" x:Name="ParkingLotSituationContainer">
                                                        <TextBlock
                                                                Style="{ThemeResource ParkingLotListDetailStyle}"
                                                                Text="{x:Bind FreeLots, Mode=OneWay}"
                                                                x:Phase="2"
                                                                FontWeight="SemiBold" />
                                                        <TextBlock
                                                                Style="{ThemeResource ParkingLotListDetailStyle}"
                                                                Padding="3,0,3,0"
                                                                Text="/"
                                                                Visibility="{x:Bind TotalLots, Mode=OneWay, Converter={StaticResource IntGreaterZeroToVisibilityConverter}}"
                                                                />
                                                        <TextBlock
                                                                Style="{ThemeResource ParkingLotListDetailStyle}"
                                                                Text="{x:Bind TotalLots, Mode=OneWay}"
                                                                Visibility="{x:Bind TotalLots, Mode=OneWay, Converter={StaticResource IntGreaterZeroToVisibilityConverter}}"
                                                                x:Phase="2" />
                                                        <TextBlock
                                                                x:Uid="ParkingLotListDetailFree"
                                                                Style="{ThemeResource ParkingLotListDetailStyle}"
                                                                Text="frei"
                                                                />
                                                    </StackPanel>
                                                </StackPanel>
                                            </Grid>
                                            <StackPanel
                                                x:Name="ForecastChartContainer"
                                                Visibility="Collapsed">
                                                <controls:ParkingLotForecastChart
                                                    x:Name="ForecastChart"
                                                    Visibility="{x:Bind HasForecast, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                    HorizontalAlignment="Stretch"
                                                    x:Phase="1"
                                                    ParkingLot="{x:Bind Mode=OneWay}"
                                                    IsSelected="False"
                                                    />
                                                <Button
                                                    Content="Wegbeschreibung"
                                                    Tag="&#xE816;"
                                                    x:Uid="ParkingLotListNavigationBtn"
                                                    Style="{ThemeResource ParkingLotListNavigationButton}"
                                                    Command="{Binding Main.NavigateToParkingLotCommand, Source={StaticResource Locator}}"
                                                    x:Phase="6"
                                                    CommandParameter="{x:Bind Mode=OneWay}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </UserControl>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <Border
                            RelativePanel.AlignTopWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.AlignLeftWithPanel="True"
                            Style="{StaticResource OfflineHintBorderStyle}"
                            Visibility="{x:Bind Vm.InternetAvailable, Mode=OneWay, Converter={StaticResource NegativeBooleanToVisibilityConverter}}"
                            x:Name="OfflineHint">
                            <TextBlock
                                Style="{StaticResource OfflineHintTextStyle}"
                                x:Uid="OfflineHintLabel"
                                Text="Du bist offline"/>
                        </Border>
                    </RelativePanel>
                    <!-- #endregion -->
                    <!-- #region Map -->
                    <RelativePanel
                        x:Name="ParkingLotMap"
                        RelativePanel.AlignRightWithPanel="True"
                        RelativePanel.AlignLeftWithPanel="True"
                        RelativePanel.Below="ParkingLotListTopBar"
                        Style="{StaticResource ParkingLotMap}"
                        Height="150"
                        >
                        <RelativePanel
                            x:Name="MapTopBar"
                            Visibility="Collapsed"
                            Height="0"
                            Style="{ThemeResource MapTopBarStyle}"
                            RelativePanel.AlignTopWithPanel="True"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            />
                        <maps:MapControl
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.AlignBottomWithPanel="True"
                            RelativePanel.AlignTopWithPanel="True"
                            Margin="0,0,-1,0"
                            x:Name="Map"
                            Center="{x:Bind Vm.MapCenter, Mode=TwoWay}"
                            MapServiceToken="ODfhhm4fu4fI3bK7netn~Fld-dSJIU1C5srIK9bLJWA~AhmDa72RljmI6HW5OV0kEFt0sN_eRk-JF_Eu03jpeiigdHuK6fQ70zEBy5QaOoYq"
                            />
                    </RelativePanel>
                    <!-- #endregion -->
                    <!-- #region Container for background drawings -->
                    <Grid
                        x:DeferLoadStrategy="Lazy"
                        x:Name="BackgroundDrawingContainer"
                        Margin="-500,-500,0,0" />
                    <!-- #endregion -->
                </RelativePanel>
            </SplitView.Content>
            <!-- #endregion -->
        </SplitView>
        <!-- #endregion -->
        <!-- #region Info dialog -->
        <controls:InfoDialog
            Visibility="Collapsed"
            x:Name="InfoDialog"
            x:DeferLoadStrategy="Lazy" />
        <!-- #endregion -->
    </Grid>
</Page>